from aiogram import Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from config import dp, bot, admins, base


from handlers.client import start_message

from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text

from keyboards.admin.admin_kb import main_admin_kb


@dp.message_handler(commands="admin", user_id=admins)
async def admin_main(message: types.Message):
    await message.answer("–ú–µ–Ω—é –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏", reply_markup=main_admin_kb)

@dp.message_handler(Text(equals="‚Ü©–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —Ä–µ–∂–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"), state=None, user_id=admins)
async def get_back_to_user(message: types.Message):
    await start_message(message)

@dp.callback_query_handler(Text("adm_close"))
async def admin_close(call: types.CallbackQuery, state: FSMContext):
    await call.message.delete()
    await state.finish()

@dp.message_handler(Text("üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"), user_id=admins)
async def get_admin_stats(message: types.Message):
    stats = await base.get_admin_stats()
    await message.answer("‚ûñ‚ûñ‚ûñ‚ûñ<b>üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>‚ûñ‚ûñ‚ûñ‚ûñ\n"
                           f"üë•–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞: <code>{stats[0]}</code>\n"
                           f"üõí–í—Å–µ–≥–æ –ø—Ä–æ–¥–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: <code>{stats[1]}</code>\n"
                           f'üëë–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–æ—Ç–æ—Ä—ã–π –∫—É–ø–∏–ª –Ω–∞–∏–±–æ–ª—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞: <a href="tg://user?id={str(stats[2])}">@{await base.get_username_by_id(stats[2])}</a>\n'
                           f"üíµ–û–±—â–∞—è —Å—É–º–º–∞ –ø–æ–∫—É–ø–æ–∫: <code>{str(stats[3])} —Ä—É–±–ª–µ–π</code>", reply_markup=InlineKeyboardMarkup(row_width=1).add(InlineKeyboardButton(text="–ó–∞–∫—Ä—ã—Ç—å", callback_data="adm_close")))