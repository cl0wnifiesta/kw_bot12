from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from config import dp, bot, admins, base

from aiogram.dispatcher.filters import Text

from keyboards.admin.admin_kb import admin_stats_kb


@dp.message_handler(Text("üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"), user_id=admins)
async def get_admin_stats(message: types.Message):
    stats = await base.get_admin_stats()
    await message.answer("‚ûñ‚ûñ‚ûñ‚ûñ<b>üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>‚ûñ‚ûñ‚ûñ‚ûñ\n"
                         f"üë•–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞: <code>{stats[0]}</code>\n"
                         f"üõí–í—Å–µ–≥–æ –ø—Ä–æ–¥–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: <code>{stats[1]}</code>\n"
                         f'üëë–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–æ—Ç–æ—Ä—ã–π –∫—É–ø–∏–ª –Ω–∞–∏–±–æ–ª—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞: <a href="tg://user?id={str(stats[2])}">@{await base.get_username_by_id(stats[2])}</a>\n'
                         f"üíµ–û–±—â–∞—è —Å—É–º–º–∞ –ø–æ–∫—É–ø–æ–∫: <code>{str(stats[3])} —Ä—É–±–ª–µ–π</code>", reply_markup=admin_stats_kb)


@dp.callback_query_handler(Text("get_admin_stats"), user_id=admins)
async def get_admin_stats(call: types.CallbackQuery):
    stats = await base.get_admin_stats()
    await call.message.edit_text("‚ûñ‚ûñ‚ûñ‚ûñ<b>üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                 f"üë•–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞: <code>{stats[0]}</code>\n"
                                 f"üõí–í—Å–µ–≥–æ –ø—Ä–æ–¥–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: <code>{stats[1]}</code>\n"
                                 f'üëë–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–æ—Ç–æ—Ä—ã–π –∫—É–ø–∏–ª –Ω–∞–∏–±–æ–ª—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞: <a href="tg://user?id={str(stats[2])}">@{await base.get_username_by_id(stats[2])}</a>\n'
                                 f"üíµ–û–±—â–∞—è —Å—É–º–º–∞ –ø–æ–∫—É–ø–æ–∫: <code>{str(stats[3])} —Ä—É–±–ª–µ–π</code>",
                                 reply_markup=admin_stats_kb)


@dp.callback_query_handler(Text("admin_stats_day"))
async def get_day_stats(call: types.CallbackQuery):
    stats = await base.get_day_admin_stats()
    msg = ("‚ûñ‚ûñ‚ûñ‚ûñüí∞–ü–æ–∫—É–ø–∫–∏ –∑–∞ –¥–µ–Ω—å‚ûñ‚ûñ‚ûñ‚ûñ\n\n"
           "<strong>ID | –°—É–º–º–∞ | –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞</strong>\n\n")
    for buy in stats:
        msg += f"{buy[0]} | {buy[1]} | {buy[2]}\n"
    await call.message.edit_text(msg, reply_markup=InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="get_admin_stats")))


@dp.callback_query_handler(Text("admin_stats_week"))
async def get_day_stats(call: types.CallbackQuery):
    stats = await base.get_week_admin_stats()
    msg = ("‚ûñ‚ûñ‚ûñ‚ûñüí∞–ü–æ–∫—É–ø–∫–∏ –∑–∞ –Ω–µ–¥–µ–ª—é‚ûñ‚ûñ‚ûñ‚ûñ\n\n"
           "<strong>ID | –°—É–º–º–∞ | –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞</strong>\n\n")
    for buy in stats:
        msg += f"{buy[0]} | {buy[1]} | {buy[2]}\n"
    await call.message.edit_text(msg, reply_markup=InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="get_admin_stats")))


@dp.callback_query_handler(Text("admin_stats_month"))
async def get_day_stats(call: types.CallbackQuery):
    stats = await base.get_month_admin_stats()
    msg = ("‚ûñ‚ûñ‚ûñ‚ûñüí∞–ü–æ–∫—É–ø–∫–∏ –∑–∞ –º–µ—Å—è—Ü‚ûñ‚ûñ‚ûñ‚ûñ\n\n"
           "<strong>ID | –°—É–º–º–∞ | –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞</strong>\n\n")
    for buy in stats:
        msg += f"{buy[0]} | {buy[1]} | {buy[2]}\n"
    await call.message.edit_text(msg, reply_markup=InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="get_admin_stats")))

